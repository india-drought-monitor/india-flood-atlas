{"version":3,"file":"static/js/539.d13ad969.chunk.js","mappings":"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","sources":["helpers/functions.js","components/FloodRiskLegend.js","pages/FloodRiskPage.js"],"sourcesContent":["import * as L from \"leaflet\";\n\nexport const mapCenter=[23, 84]\nexport const setInitialMapZoom = ()=> {\n    var viewportWidth = window.innerWidth;\n    var mapZoom;\n    if (viewportWidth <= [767]) {\n        mapZoom = [4];\n    } if (viewportWidth >= [768]) {\n        mapZoom = [4.5];\n    } if (viewportWidth >= [1600]) {\n        mapZoom = [5];\n    }\n    return mapZoom;\n}\n\nexport const setInitialFloodRiskMapZoom = ()=> {\n    var viewportWidth = window.innerWidth;\n    var mapZoom;\n    if (viewportWidth <= [767]) {\n        mapZoom = [4];\n    } if (viewportWidth >= [768]) {\n        mapZoom = [4];\n    } if (viewportWidth >= [1600]) {\n        mapZoom = [4];\n    }\n    return mapZoom;\n}\n\nexport const setDragging = () => {\n    var viewportWidth = window.innerWidth;\n    var dragging;\n    if (viewportWidth <= [767]) {\n        dragging = false;\n    } if (viewportWidth >= [768]) {\n        dragging = true;\n    }\n    return dragging;\n}\nexport const maxBounds = L.latLngBounds(\n    L.latLng(4, 60),  \n    L.latLng(45, 110)  \n);","import React from 'react'\n\nconst FloodRiskLegend = ({heading}) => {\n    return (\n        <>\n\n                <div className=\"legend\">\n                    <div className=\"flood-risk-legend-heading\">\n                        <p>{heading}</p>\n                    </div>\n                    {/* <div className=\"legend-item\">\n                        <p className=\"legend-color-value\"> Exceptional</p>\n                        <p className=\"legend-color-value\"> Extreme</p>\n                        <p className=\"legend-color-value\"> Severe</p>\n                        <p className=\"legend-color-value\"> Moderate</p>\n                        <p className=\"legend-color-value\"> Abnormal</p>\n                        <p className=\"legend-color-value\"> Normal</p>\n                    </div> */}\n                    <div className=\"flood-legend-color\">\n                        <i style={{backgroundColor: '#FFFFCF'}}></i>\n                        <i style={{backgroundColor: '#FFEDA5'}}></i>\n                        <i style={{backgroundColor: '#FFD97E'}}></i>\n                        <i style={{backgroundColor: '#FFB258'}}></i>\n                        <i style={{backgroundColor: '#FF8D48'}}></i>\n                        <i style={{backgroundColor: '#FF8D48'}}></i>\n                        <i style={{backgroundColor: '#FF4E36'}}></i>\n                        <i style={{backgroundColor: '#ED1A28'}}></i>\n                        <i style={{backgroundColor: '#C6022D'}}></i>\n                        <i style={{backgroundColor: '#860128'}}></i>\n                    </div>\n\n                    <div className=\"legend-item\" style={{fontSize:\"12px\"}}>\n                        <p className=\"flood-legend-num-value\"> 0</p>\n                        <p className=\"flood-legend-num-value\"> 0.1</p>\n                        <p className=\"flood-legend-num-value\"> 0.2</p>\n                        <p className=\"flood-legend-num-value\"> 0.3</p>\n                        <p className=\"flood-legend-num-value\"> 0.4</p>\n                        <p className=\"flood-legend-num-value\"> 0.5</p>\n                        <p className=\"flood-legend-num-value\"> 0.6</p>\n                        <p className=\"flood-legend-num-value\"> 0.7</p>\n                        <p className=\"flood-legend-num-value\"> 0.8</p>\n                        <p className=\"flood-legend-num-value\"> 0.9</p>\n                    </div>\n\n                </div>\n\n        </>\n\n    )\n}\n\nexport default FloodRiskLegend","import React, { useEffect, useRef, useState } from 'react'\nimport { MapContainer, GeoJSON, useMap } from 'react-leaflet'\nimport * as L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport { maxBounds, setDragging, setInitialFloodRiskMapZoom, setInitialMapZoom } from '../helpers/functions';\nimport floodRiskData from \"../assets/data/flood_risk.json\"\nimport IndiaSubBasins from \"../assets/data/IndiaSubBasins.json\"\nimport { BasemapLayer } from 'react-esri-leaflet';\nimport india_boundary from \"../assets/data/india_boundary.json\"\nimport FloodRiskLegend from '../components/FloodRiskLegend';\n\nconst FloodRiskPage = () => {\n\n    function DistrictOnEachfeature(feature, layer, selectedIndex) {\n        layer.on('mouseover', function (e) {\n            const DataItem = floodRiskData.find(item => item.SubBasinID === feature.properties.ID);\n            if (feature.properties && feature.properties.ID) {\n                const popupContent = `\n          <div>\n           ID: ${feature.properties.ID}<br/>\n            Sub-basin: ${feature.properties.Name}<br/>\n            Normalized ${selectedIndex}: ${DataItem ? DataItem[selectedIndex] : null}\n          </div>\n        `;\n                layer.bindTooltip(popupContent, { sticky: true });\n            }\n            layer.openTooltip();\n        });\n\n        layer.on('mouseout', function () {\n            layer.closeTooltip();\n        });\n    }\n\n\n\n    const DistrictDensity = (density => {\n        return density > 0.9 ? '#860128'\n            : density > 0.8 ? '#C6022D'\n                : density > 0.7 ? '#ED1A28'\n                    : density > 0.6 ? '#FF4E36'\n                        : density > 0.4 ? '#FF8D48'\n                            : density > 0.3 ? '#FFB258'\n                                : density > 0.2 ? '#FFD97E'\n                                    : density > 0.1 ? '#FFEDA5'\n                                        : density > 0 ? '#FFFFCF'\n                                            : 'white';\n    })\n\n\n\n\n    const DistrictStyle = (feature, parameter) => {\n        const getDensityFromSummerData = (id) => {\n            const DataItem = floodRiskData.find(item => item.SubBasinID === id);\n            return DataItem ? DataItem[parameter] : null;\n        };\n\n        const density = getDensityFromSummerData(feature.properties.ID);\n        return ({\n            fillColor: DistrictDensity(density),\n            weight: 1,\n            opacity: 1,\n            color: 'black',\n            dashArray: '2',\n            fillOpacity: 1\n        });\n    };\n\n\n\n\n\n    return (\n        <div className='dasboard_page_container'>\n            <div className='flood_risk_maps_container' style={{ height: \"100%\" }}>\n\n\n                <div className='flood_risk_maps'>\n                    <MapContainer\n                        fullscreenControl={true}\n                        center={[23, 84]}\n                        style={{ width: '100%', height: \"100%\", backgroundColor: 'white', border: 'none', margin: 'auto' }}\n                        zoom={setInitialFloodRiskMapZoom() }\n                        maxBounds={maxBounds}\n                        minZoom={setInitialFloodRiskMapZoom() }\n                        keyboard={false}\n                        dragging={setDragging()}\n                        doubleClickZoom={false}\n                    >\n                        <BasemapLayer name=\"Streets\" />\n\n\n                        <div className=\"flood-legend-panel-desktop\">\n                            <FloodRiskLegend heading=\"Normalized Vulnerability Index\" />\n                        </div>\n\n                        <GeoJSON data={india_boundary}\n                            interactive={false}\n                            style={\n                                {\n                                    fillColor: \"white\",\n                                    color: \"black\",\n                                    fillOpacity: \"1\",\n                                    weight: \"1\"\n                                }\n                            }\n                        />\n                        <GeoJSON data={IndiaSubBasins.features}\n                            style={(feature) => DistrictStyle(feature, \"Vulnerability\")}\n                            onEachFeature={(feature, layer) => DistrictOnEachfeature(feature, layer, \"Vulnerability\")}\n                        />\n\n                    </MapContainer>\n                </div>\n\n                <div className='flood_risk_maps'>\n                    <MapContainer\n                        fullscreenControl={true}\n                        center={[23, 84]}\n                        style={{ width: '100%', height: \"100%\", backgroundColor: 'white', border: 'none', margin: 'auto' }}\n                        zoom={setInitialFloodRiskMapZoom() }\n                        maxBounds={maxBounds}\n                        minZoom={setInitialFloodRiskMapZoom() }\n                        keyboard={false}\n                        dragging={setDragging()}\n                        doubleClickZoom={false}\n                    >\n                        <BasemapLayer name=\"Streets\" />\n                        <div className=\"flood-legend-panel-desktop\">\n                            <FloodRiskLegend heading=\"Normalized Hazard\" />\n                        </div>\n                        <GeoJSON data={india_boundary}\n                            interactive={false}\n                            style={\n                                {\n                                    fillColor: \"white\",\n                                    color: \"black\",\n                                    fillOpacity: \"1\",\n                                    weight: \"1\"\n                                }\n                            }\n                        />\n                        <GeoJSON data={IndiaSubBasins.features}\n                            style={(feature) => DistrictStyle(feature, \"Hazard\")}\n                            onEachFeature={(feature, layer) => DistrictOnEachfeature(feature, layer, \"Hazard\")}\n                        />\n                    </MapContainer>\n                </div>\n\n                <div className='flood_risk_maps'>\n                    <MapContainer\n                        fullscreenControl={true}\n                        center={[23, 84]}\n                        style={{ width: '100%', height: \"100%\", backgroundColor: 'white', border: 'none', margin: 'auto' }}\n                        zoom={setInitialFloodRiskMapZoom()}\n                        maxBounds={maxBounds}\n                        minZoom={setInitialFloodRiskMapZoom() }\n                        keyboard={false}\n                        dragging={setDragging()}\n                        doubleClickZoom={false}\n                    >\n                        <div className=\"flood-legend-panel-desktop\">\n                            <FloodRiskLegend heading=\"Normalized Exposure\" />\n                        </div>\n                        <BasemapLayer name=\"Streets\" />\n                        <GeoJSON data={india_boundary}\n                            interactive={false}\n                            style={\n                                {\n                                    fillColor: \"white\",\n                                    color: \"black\",\n                                    fillOpacity: \"1\",\n                                    weight: \"1\"\n                                }\n                            }\n                        />\n                        <GeoJSON data={IndiaSubBasins.features}\n                            style={(feature) => DistrictStyle(feature, \"Exposure\")}\n                            onEachFeature={(feature, layer) => DistrictOnEachfeature(feature, layer, \"Exposure\")}\n                        />\n                    </MapContainer>\n                </div>\n\n                <div className='flood_risk_maps'>\n                    <MapContainer\n                        fullscreenControl={true}\n                        center={[23, 84]}\n                        style={{ width: '100%', height: \"100%\", backgroundColor: 'white', border: 'none', margin: 'auto' }}\n                        zoom={setInitialFloodRiskMapZoom() }\n                        maxBounds={maxBounds}\n                        minZoom={setInitialFloodRiskMapZoom() }\n                        keyboard={false}\n                        dragging={setDragging()}\n                        doubleClickZoom={false}\n                    >\n                        <div className=\"flood-legend-panel-desktop\">\n                            <FloodRiskLegend heading=\"Normalized Risk\" />\n                        </div>\n                        <BasemapLayer name=\"Streets\" />\n                        <GeoJSON data={india_boundary}\n                            interactive={false}\n                            style={\n                                {\n                                    fillColor: \"white\",\n                                    color: \"black\",\n                                    fillOpacity: \"1\",\n                                    weight: \"1\"\n                                }\n                            }\n                        />\n                        <GeoJSON data={IndiaSubBasins.features}\n                            style={(feature) => DistrictStyle(feature, \"Risk\")}\n                            onEachFeature={(feature, layer) => DistrictOnEachfeature(feature, layer, \"Risk\")}\n                        />\n                    </MapContainer>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default FloodRiskPage;\n"],"names":["mapCenter","setInitialMapZoom","mapZoom","viewportWidth","window","innerWidth","setInitialFloodRiskMapZoom","setDragging","dragging","maxBounds","L","_ref","heading","_jsx","_Fragment","children","_jsxs","className","style","backgroundColor","fontSize","FloodRiskPage","DistrictOnEachfeature","feature","layer","selectedIndex","on","e","DataItem","floodRiskData","find","item","SubBasinID","properties","ID","popupContent","concat","Name","bindTooltip","sticky","openTooltip","closeTooltip","DistrictDensity","density","DistrictStyle","parameter","id","getDensityFromSummerData","fillColor","weight","opacity","color","dashArray","fillOpacity","height","MapContainer","fullscreenControl","center","width","border","margin","zoom","minZoom","keyboard","doubleClickZoom","BasemapLayer","name","FloodRiskLegend","GeoJSON","data","india_boundary","interactive","IndiaSubBasins","onEachFeature"],"sourceRoot":""}